apply plugin: 'com.android.library'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
//apply plugin: 'com.vanniktech.android.javadoc'

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

// Maven Group ID for the artifact
group = 'com.hapi.sdk'

// Maven Artifact ID
def mavenArtifactId = 'stormpath-sdk-android'

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

// library version used when deploying the artifact
version = getVersionName()

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        // Fix for lint error:
        // Invalid package reference in library; not included in Android: java.nio.file. Referenced from okio.Okio.
        warning 'InvalidPackage'
    }

    // all resources need to be prefixed so users don't override them by accident
    resourcePrefix 'stormpath_'
}

// this ensures the archives have the correct name instead of just using the module name
project.archivesBaseName = mavenArtifactId

configurations {
    javadocDeps
}

dependencies {
    compile(rootProject.ext.okHttp) {
        transitive = false
    }
    compile(rootProject.ext.okHttpLoggingInterceptor) {
        transitive = false
    }
    compile rootProject.ext.moshi
    compile rootProject.ext.supportAnnotations
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:customtabs:23.3.0'
    javadocDeps rootProject.ext.okHttp
    javadocDeps rootProject.ext.okHttpLoggingInterceptor
    javadocDeps rootProject.ext.moshi
    javadocDeps rootProject.ext.supportAnnotations
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.1.2'
    testCompile 'org.robolectric:robolectric:3.0'
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'Stormpath Android SDK'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'ericlw'
                        name 'Eric LW'
                        email 'eric@stormpath.com'
                    }
                    developer {
                        id 'reisub'
                        name 'Dino Kovaƒç'
                        email 'dino.kovac@infinum.co'
                    }
                    developer {
                        id 'stormpath'
                        name 'Stormpath Java Team'
                        email 'java@stormpath.com'
                    }
                }
                scm {
                    connection rootProject.ext.gitUrl
                    developerConnection rootProject.ext.gitUrl
                    url rootProject.ext.siteUrl
                }
            }
        }
    }
}

/*
compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}
*/

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = rootProject.ext.bintrayUser
    key = rootProject.ext.bintrayApiKey

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = mavenArtifactId
        userOrg = 'stormpath'
        websiteUrl = rootProject.ext.siteUrl
        vcsUrl = rootProject.ext.gitUrl
        licenses = ['Apache-2.0']
        publish = true // if set to false, you need to click publish on bintray after deploy
        version {
            gpg.sign = true
            gpg.passphrase = rootProject.ext.bintrayGpgPassword
        }
    }
}